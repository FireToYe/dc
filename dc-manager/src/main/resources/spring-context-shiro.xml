<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>
 
    <!-- 加载配置属性文件 -->
	  <!-- 配置文件外化 -->
	<bean id="propertiesHolder" class="com.zhilink.manager.common.config.PropertiesHolder">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="localOverride" value="true" />
		<property name="locations">
			<list>
				<value>classpath:zhilink.properties</value>
			</list>
		</property>
	</bean>
		<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:zhilink.properties" />   -->
	
	
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				${apiPath}/srm/delivery/getReceiveList = anon
				${apiPath}/srm/delivery/getReceiveDetail = anon
				${apiPath}/srm/delivery/getDocType = anon
				${apiPath}/srm/delivery/receipt = anon 
				${apiPath}/srm/delivery/erpReceipt = anon 
				${apiPath}/srm/delivery/receiptList = anon 
				${apiPath}/srm/delivery/receiptDetail = anon
				${apiPath}/${wmsApiPath}/open/**= anon
				${adminPath}/wms/barcodePrinter/downloadScript = anon
				${adminPath}/ica/api/** = anon
				/static/** = anon
				/userfiles/** = anon
			    ${apiPath}/login = anon
			    ${apiPath}/${wmsApiPath}/loginout = anon
				${adminPath}/logout = logout
			    ${apiPath}/${wmsApiPath}/login = anon
			    ${apiPath}/loginout = anon
			    ${apiPath}/app/** = anon
				${adminPath}/login = authc
 				${apiPath}/authority/**=manathc   	<!-- 供应商管理验证,SRM供应商权限授权相关的页面需要验证 -->
				${apiPath}/** = authc 
				/act/editor/** = user
				${adminPath}/** = userLogin
			</value>
		</constructor-arg>
	</bean>
    <bean id="shiroPermsFilter" class="com.zhilink.srm.manager.modules.sys.security.ShiroPermsFilter"></bean>
    
	<bean id="userLoginFilter" class="com.zhilink.srm.manager.modules.sys.security.UserLoginFilter"></bean>

	<bean id="managerAuthenticationFilter" class="com.zhilink.srm.manager.modules.sys.security.ManagerAuthenticationFilter"></bean>
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" /><!-- 
		<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}${adminPath}/cas" /> -->
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
            <map>
                <entry key="perms" value-ref="shiroPermsFilter"/>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="manathc" value-ref="managerAuthenticationFilter"/> 
               	<entry key="userLogin" value-ref="userLoginFilter"/>
            </map>
        </property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>
	

	
	<!-- CAS认证过滤器 -->  
	<!-- <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
		<property name="failureUrl" value="${adminPath}/login"/>
	</bean> -->
	
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" >
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	<bean id="systemAuthorizingRealm" class="com.zhilink.srm.manager.modules.sys.security.SystemAuthorizingRealm">
	<property name="exclusions">
		<list>
			<value>wms:*:*</value> <!-- 排除指定模块的权限控制 -->
		</list>
	</property>
	</bean>
	<!-- 自定义会话管理配置 -->
	<bean id="sessionManager" class="com.zhilink.srm.common.security.shiro.session.SessionManager"> 
		<property name="sessionDAO" ref="sessionDAO"/>
		
		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
		
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
<!--  		<property name="sessionValidationSchedulerEnabled" value="false"/> -->
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
 		
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="zhilink.session.id"/>
	</bean>

	<!-- 自定义Session存储容器 -->
<!-- 	<bean id="sessionDAO" class="com.zhilink.srm.common.security.shiro.session.JedisSessionDAO"> -->
<!-- 		<property name="sessionIdGenerator" ref="idGen" /> -->
<!-- 		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" /> -->
<!-- 	</bean> -->
    <bean id="idGen" class="com.zhilink.manager.framework.common.utils.IdGen">
    </bean>

	<bean id="sessionDAO" class="com.zhilink.srm.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	
	<!-- 自定义系统缓存管理器-->
<!-- 	<bean id="shiroCacheManager" class="com.zhilink.manager.framework.common.security.shiro.cache.JedisCacheManager"> -->
<!-- 		<property name="cacheKeyPrefix" value="${redis.keyPrefix}_cache_" /> -->
<!-- 	</bean> -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>